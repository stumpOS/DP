/*
This class holds all information to be displayed on the screen.
This includes documentation information as well as data generated by the 
DP algorithm classes. Thus this class acts as a communication access point
between the Window classes and the data processing classes
*/
#pragma once
#ifndef DOCUMENT_H_
#define DOCUMENT_H_

#include<string>
#include<fstream>
#include<vector>
#include"Parser.h"
#include "Problem.h"
#include "SAP.h"
#include "wx/wx.h"
#include<fstream>
#include<string>
#include<stdio.h>
#include<cstdlib>
using namespace std;

enum ProblemType{eLCS, eClassPath, eNone};

class Document
{
public:
	Document(void);
	~Document(void);
	// TODO: Replace this with iterator class
	Page* GetPage(int i);
	int GetNumPages(){return _DocPages.size();}
	int GetCurrentPage(){return _currentPageIndex;}
	void LoadProblem(string filename);
	void LoadProblemTwoFiles(string filename1, string filename2);
	void Next();
	void GoTo(int pageNumber);
	void SetProblemType(ProblemType p){_probType = p;}
	ProblemType GetProblemType(){return _probType;}
	wxString GetDisplayText(){return wxString(_displayText);}
	
	void DP();
private:
	vector<Page> _DocPages;
	int _currentPageIndex;
	Problem *_problem;
	ProblemType _probType;
	string _displayText;
};
#endif

